{"version":3,"sources":["components/About.js","components/Navbar.js","components/textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","style","lineHeight","Navbar","props","vmode","color","href","title","to","aboutTitle","type","id","onClick","toggle","htmlFor","Texta","useState","text","setText","heading","rows","value","onChange","event","target","backgroundColor","toUpperCase","showAlert","toLowerCase","a","document","querySelector","select","console","log","navigator","clipboard","writeText","alert","split","filter","n","length","toFixed","defaultProps","Alert","message","App","mode","setmode","setalert","setTimeout","ele","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd603a83.chunk.js","sourcesContent":["\r\nimport React  from \"react\";\r\n\r\nexport default function About() {\r\n  let myStyleLight = {\r\n    border: \"2px solid black\",\r\n    textAlign: \"center\",\r\n\tcolor:\"black\"\r\n  };\r\n  let myStyleDark = {\r\n    border: \"2px solid white\",\r\n    textAlign: \"center\",\r\n\tbackgroundColor: \"black\",\r\n    color: \"white\"\r\n  };\r\n \r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container\">\r\n        <h4>\r\n          <u>About</u>{\" \"}\r\n        </h4>\r\n        <p style={{lineHeight:\"2rem\"}}>\r\n          This site is one of the simple and easy to use site created with the\r\n          help of react framework, through this site you can easily modify your\r\n          text accordingly and then copy the text for further purpose . It also\r\n          tells about the number of words in the text and how much time will it\r\n          take to read the given text . Using this site at night ? ,you can also\r\n          try out the dark mode feature of this site for smooth use.\r\n        </p>\r\n\r\n        <div className=\"container\">~Made with ❤️ by Ashutosh~</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  // #08222d\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.vmode} bg-${props.vmode===\"dark\"?\"dark\":\"light\"}`}\r\n      >\r\n        <a\r\n          className=\"navbar-brand\"\r\n          style={\r\n            props.vmode === \"dark\" ? { color: \"#2bbed7\" } : { color: \"black\" }\r\n          }\r\n          href=\"/\"\r\n        >\r\n          {props.title}\r\n        </a>\r\n       \r\n\r\n        \r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home<span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/About\">\r\n                {props.aboutTitle}\r\n              </Link>\r\n            </li>\r\n            \r\n          </ul>\r\n   \r\n        <div className=\"custom-control custom-switch\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customSwitch1\"\r\n            onClick={props.toggle}\r\n          />\r\n          <label\r\n            className={`custom-control-label`}\r\n            style={\r\n              props.vmode === \"dark\" ? { color: \"#2bbed7\" } : { color: \"black\" }\r\n            }\r\n            htmlFor=\"customSwitch1\"\r\n          >\r\n            Dark Mode\r\n          </label>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n// proptypes\r\n//has an object value.\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutTitle: PropTypes.string,\r\n};\r\n\r\n//default prop\r\nNavbar.defaultProps = {\r\n  title: \"Title goes here\",\r\n  aboutTitle: \"About goes here\",\r\n};\r\n","import React, { useState } from \"react\";\r\nexport default function Texta(props) {\r\n  const [text, setText] = useState(\"\");\r\n  let textChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  let convUp = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"converted to UpperCase !\",\"success\");\r\n  };\r\n  let convLow = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"converted to LowerCase !\",\"success\");\r\n  };\r\n  function countWords(str) {\r\n    return text.split(\" \").filter(function (n) {\r\n      return n !== \"\";\r\n    }).length;\r\n  }\r\n  let copyToClip = () => {\r\n    const a = document.querySelector(\"textarea\");\r\n    a.select();\r\n    console.log(a);\r\n    navigator.clipboard.writeText(text);\r\n\r\n    alert(\"copied text:\" + text);\r\n    props.showAlert(\"copied the text\",\"success\");\r\n  };\r\n  let clearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"cleared!\",\"success\");\r\n  };\r\n  const lightTheme={\r\n    backgroundColor:\"white\",\r\n    color:\"black\",\r\n  }\r\n  const darkTheme={\r\n    backgroundColor:\"grey\",\r\n    color:\"white\",\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"7\"\r\n            value={text}\r\n            onChange={textChange}\r\n            style={props.vmode===\"dark\"?darkTheme:lightTheme}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mr-3\" onClick={convUp}>\r\n          Convert to upperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mr-3\" onClick={convLow}>\r\n          Convert to lowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mr-2 my-2\" onClick={copyToClip}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary mr-2 my-2\" onClick={clearText}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {countWords()} words and {text.length} characters.\r\n        </p>\r\n        <p>\r\n          {(0.008 * text.split(\" \").length).toFixed(3)} minutes of reading .\r\n        </p>\r\n        <h4>\r\n          <u>Preview</u>\r\n        </h4>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n \r\n\treturn (\r\n\tprops.alert &&\t\r\n   \r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show\r\n        role=\"alert\"`}\r\n      >\r\n     <strong>{props.alert.type} </strong> :{ props.alert.message} \r\n       \r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Texta from \"./components/textarea\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  //here you can define variables and use them in jsx.\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  let showAlert = (message, type) => {\n    setalert({\n      message: message,\n      type: type,\n    });\n    setTimeout(()=>{\n      setalert(null)\n    },1500);\n  };\n  let toggleMode = () => {\n    const ele = document.querySelector(\"body\");\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      ele.style.backgroundColor = \"#08222d\";\n      ele.style.color = \"white\";\n      showAlert(\"changed to dark mode\",\"success\");\n    } else {\n      setmode(\"light\");\n      ele.style.backgroundColor = \"white\";\n      ele.style.color = \"black\";\n      showAlert(\"changed to light mode\",\"success\");\n    }\n  };\n  return (\n    // this is known as jsx. and accepts only one comp.\n    // you can add another one by using <></> at the start of jsx.\n    // one more important thing to note is that whenever you are giveing your project to somebody you put the node modules in gitignore\n    // The person can easily install them from the package.json with the command npm i\n    <>\n    <Router>\n      <Navbar\n        title=\"TextAwesome\"\n        aboutTitle=\"About\"\n        vmode={mode}\n        toggle={toggleMode}\n      />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n       \n          <Route path=\"/\">\n            <Texta showAlert={showAlert} heading=\"Enter your text here..\" vmode={mode} />\n          </Route>\n        </Switch>\n        \n       \n     </div>\n     </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}